generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  progresses    UserProgress[]  // Add this line
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserProgress {
  id         String @id @default(cuid())
  userId     String
  questionId String
  completed  Boolean @default(false)
  reviewed   Boolean @default(false)
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, questionId]) // Add this line
}

model Question {
  id           String   @id @default(cuid())
  questionId   String   @unique
  text         String
  subject      String
  difficulty   String
  type         String
  year         Int
  reviewed     Boolean  @default(false)
  completed    Boolean  @default(false)
  options      String[]
  correctOption String
  markscheme   String
}
